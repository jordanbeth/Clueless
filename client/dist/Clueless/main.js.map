{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/game/game.component.css","webpack:///./src/app/game/game.component.html","webpack:///./src/app/game/game.component.ts","webpack:///./src/app/landing-page/landing-page.component.css","webpack:///./src/app/landing-page/landing-page.component.html","webpack:///./src/app/landing-page/landing-page.component.ts","webpack:///./src/app/socket.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/models/CardHelper.ts","webpack:///./src/models/InactivePieces.ts","webpack:///./src/models/Player.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#gameboard-container {\\n  position: relative;\\n  top: 30px;\\n  text-align: center;\\n}\\n\\n#gameboard {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n  width: 75%;\\n}\\n\\n#toast-button {\\n  margin-top: 50px;\\n}\\n\\n.game-title {\\n  /* margin-top: 10px; */\\n  /* display: block;\\n  text-align: center; */\\n  position: absolute;\\n  top: 10px;\\n  top: 27px;\\n  margin: auto;\\n  left: 0;\\n  bottom: 0;\\n  right: 0;\\n}\\n\\n.room-id {\\n  font-weight: bold;\\n}\\n\\n.upper-left-room-id {\\n  margin: 6px 4px 5px 5px;\\n  font-weight: bold;\\n}\\n\"","module.exports = \"<div *ngIf=\\\"showRoomId\\\" class=\\\"upper-left-room-id\\\">\\n  Room ID: {{ roomId }} \\n  <br/>\\n  My Player: {{ myPlayerPiece }} \\n  <br/>\\n  Number of Players: {{ numPlayers }}\\n</div>\\n<div>\\n  <!-- <div class=\\\"row game-title\\\">\\n    <h2>\\n      {{ title }}\\n    </h2>\\n  </div> -->\\n  \\n  <div *ngIf=\\\"!isConnectedToGame\\\">\\n    <app-landing-page></app-landing-page>\\n  </div>\\n  \\n  <div *ngIf=\\\"isConnectedToGame\\\">\\n    <app-game></app-game>\\n  </div>\\n</div>\\n\\n<ng-template #choosePlayerModal let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Welcome to Clue-Less!</h4>\\n    <span class=\\\"room-id\\\">Room ID: {{ roomId }}</span>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form>\\n      <label>Please select a player:</label>\\n        <div class=\\\"form-group\\\">\\n          <label>\\n            <input type=\\\"radio\\\" id=\\\"colonelMustard\\\" name=\\\"character\\\" value=\\\"Colonel Mustard\\\">\\n            Colonel Mustard\\n          </label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>\\n            <input type=\\\"radio\\\" id=\\\"missScarlet\\\" name=\\\"character\\\" value=\\\"Miss Scarlet\\\">\\n            Miss Scarlet\\n          </label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>\\n            <input type=\\\"radio\\\" id=\\\"mrGreen\\\" name=\\\"character\\\" value=\\\"Mr. Green\\\">\\n              Mr. Green\\n          </label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>\\n            <input type=\\\"radio\\\" id=\\\"mrsPeacock\\\" name=\\\"character\\\" value=\\\"Mrs. Peacock\\\">\\n            Mrs. Peacock\\n          </label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>\\n            <input type=\\\"radio\\\" id=\\\"mrWhite\\\" name=\\\"character\\\" value=\\\"Mr. White\\\">\\n            Mr. White\\n          </label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>\\n            <input type=\\\"radio\\\" id=\\\"professorPlum\\\" name=\\\"character\\\" value=\\\"Professor Plum\\\">\\n            Professor Plum\\n          </label>\\n        </div>\\n    </form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"handleCharacterSelected()\\\">Play!</button>\\n  </div>\\n</ng-template>\\n\\n\\n<button id=\\\"select-character-modal\\\" hidden (click)=\\\"openModal(choosePlayerModal)\\\"></button>\\n  \\n  \"","import { SocketService } from './socket.service';\nimport { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  private title: string = 'Clue-Less';\n  private isConnectedToGame: boolean;\n  private roomId: string;\n  private myPlayerPiece: string;\n  private name: string;\n  private numPlayers: string;\n\n  private showRoomId: boolean;\n\n  private nameToIdMapping: {} = {\n    'Colonel Mustard':'colonelMustard',\n    'Miss Scarlet': 'missScarlet',\n    'Mr. Green': 'mrGreen' ,\n    'Mrs. Peacock': 'mrsPeacock',\n    'Mr. White': 'mrWhite',\n    'Professor Plum' :'professorPlum'\n  }\n\n  constructor(private modalService: NgbModal,\n              private socketService: SocketService) {\n\n  }\n\n  ngOnInit() {\n    this.isConnectedToGame = false;\n    this.showRoomId = false;\n    // when a new game is created\n    this.socketService.onNewGameCreated().subscribe((msg) => {\n      console.log('onNewGameCreated received from server.');\n      this.roomId = msg.roomId;\n      this.name = msg.name;\n      this.numPlayers = msg.numPlayers;\n      this.showRoomId = true;\n      // console.log(`name: ${this.name}`);\n      // console.log(`roomId: ${this.roomId}`);\n      this.showSelectCharacterModal();\n      \n    });\n\n    // when a new game is joined\n    this.socketService.onGameJoined().subscribe((msg) => {\n      console.log('onGameJoined received from from server.');\n      this.name = msg.name;\n      this.roomId = msg.roomId;\n      const canJoin = msg.canJoin;\n      const takenPieces = msg.takenPieces;\n      this.showRoomId = true;\n      console.log(`this.numPlayers =${msg.numPlayers}`);\n      this.numPlayers = msg.numPlayers;\n      if(!canJoin) {\n        alert('Unable to join game!');\n      } else {\n        this.showSelectCharacterModal(takenPieces);\n      }\n      // console.log(`name: ${this.name}`);\n      // console.log(`roomId: ${this.roomId}`);\n    });\n  }\n\n  showSelectCharacterModal(takenPieces: string[] = undefined) {\n    if(takenPieces == undefined) {\n      document.getElementById('select-character-modal').click();\n    } else {\n      document.getElementById('select-character-modal').click();\n      for(let piece of takenPieces) {\n        const id = this.nameToIdMapping[piece];\n        if(id == undefined) {\n          continue;\n        }\n        let elm: any = document.getElementById(id);\n        if(elm != undefined) {\n          elm.disabled = true;\n        }\n      }\n    }\n    this.isConnectedToGame = true;\n  }\n\n  private openModal(content) {\n    this.modalService.open(content, { size: 'lg',backdrop: 'static', keyboard: false });\n  }\n\n  private handleCharacterSelected() {\n    let colonlel: any = document.getElementById('colonelMustard');\n    let missScarlet: any = document.getElementById('missScarlet');\n    let mrGreen: any = document.getElementById('mrGreen');\n    let mrsPeacock: any = document.getElementById('mrsPeacock');\n    let mrWhite: any = document.getElementById('mrWhite');\n    let professorPlum: any = document.getElementById('professorPlum');\n\n    let selectedCharacter;\n    if(colonlel.checked) {\n      selectedCharacter = 'Colonel Mustard';\n    } else if (missScarlet.checked) {\n      selectedCharacter = 'Miss Scarlet';\n    } else if(mrGreen.checked) {\n      selectedCharacter = 'Mr. Green';\n    } else if(mrsPeacock.checked) {\n      selectedCharacter = 'Mrs. Peacock';\n    } else if(mrWhite.checked) {\n      selectedCharacter = 'Mr. White';\n    } else if(professorPlum.checked) {\n      selectedCharacter = 'Professor Plum';\n    }\n\n    // console.log('Player selected: ' + selectedCharacter);\n    if(selectedCharacter != undefined) {\n      this.myPlayerPiece = selectedCharacter;\n      this.socketService.choosePlayer(this.roomId, this.name, selectedCharacter);\n      // if an elemnent is selected dismiss modal\n      this.modalService.dismissAll();\n    }\n    \n  }\n}\n","import { SocketService } from './socket.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; \nimport { NgModule } from '@angular/core';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgbModule, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { GameComponent } from './game/game.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LandingPageComponent,\n    GameComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    NgbModule.forRoot(),\n    ToastrModule.forRoot(), // ToastrModule added\n  ],\n  providers: [NgbActiveModal],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n#current-game-status {\\n  text-align: center;\\n  font-style: italic;\\n  color: blue;\\n  margin: auto;\\n}\\n\\n#gameboard-container {\\n  width: 86%;\\n  margin: 46px auto;\\n}\\n\\n#my-cards-btn {\\n  background: darkgreen;\\n}\\n\\n/**\\n * Game board styles\\n */\\n\\n.gameboard {\\n  /* width: 76%;\\n  margin: auto; */\\n  display: table;\\n  table-layout: fixed;\\n  margin: auto;\\n}\\n\\n.room {\\n  border: 1px solid;\\n  text-align: center;\\n  padding: 25px;\\n  color: black;\\n  background: lightgrey;\\n  height: 160px;\\n  width: 160px;\\n}\\n\\n/* Jerry */\\n\\n#study {\\n  background: url('Study.png') no-repeat center center;\\n  background-size: 90% 90%;\\n}\\n\\n#hall {\\n  background: url('Hall.png') no-repeat center center;\\n  background-size: 90% 90%;\\n}\\n\\n#lounge {\\n  background: url('Lounge.png') no-repeat center center;\\n  background-size: 90% 90%;\\n}\\n\\n#library {\\n  background: url('Library.png') no-repeat center center;\\n  background-size: 90% 90%;\\n}\\n\\n#billiard-room {\\n  background: url('BilliardRoom.png') no-repeat center center;\\n  background-size: 90% 90%;\\n\\n}\\n\\n#dining-room {\\n  background: url('DiningRoom.png') no-repeat center center;\\n  background-size: 90% 90%;\\n}\\n\\n#conservatory {\\n  background: url('Conservatory.png') no-repeat center center;\\n  background-size: 90% 90%;\\n}\\n\\n#ballroom {\\n  background: url('Ballroom.png') no-repeat center center;\\n  background-size: 90% 90%;\\n}\\n\\n#kitchen {\\n  background: url('Kitchen.png') no-repeat center center;\\n  background-size: 90% 90%;\\n}\\n\\n.hall {\\n  text-align: center;\\n}\\n\\n.hall-horizontal {\\n  background-color: burlywood;\\n  border: 1px dashed;\\n  height: 50px;\\n  width: 100px;\\n}\\n\\n.hall-vertical {\\n  background-color: burlywood;\\n  border: 1px dashed;\\n  height: 100px;\\n  width: 50px;\\n  margin: auto;\\n}\\n\\n.selectable-room {\\n  /* border: 1px solid darkgreen; */\\n  border: 10px solid lightgreen;\\n  background-color: lightgreen;\\n}\\n\\n.game-status-row {\\n  border: 1px dashed;\\n  width: 36%;\\n  margin: 19px auto 0px;\\n  height: 64px;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  left: 0;\\n}\\n\\n#accusation-btn {\\n  background: darkred;\\n  border: darkred;\\n}\\n\\n.offer-clue-btn {\\n  background: darkgreen;\\n  border: darkgreen;\\n  color: white;\\n}\\n\\n.reject-offer-clue-btn {\\n  background: darkred;\\n  border: darkred;\\n  color: white;\\n}\\n\\n.close {\\n  outline: none;\\n}\\n\\n.button-bottom-row {\\n  display: block;\\n  text-align: center;\\n  margin-top: 10px;\\n  margin-bottom: 25px;\\n}\\n\\n.btn {\\n  min-width: 135px;\\n}\\n\\n.btn:disabled {\\n  cursor: not-allowed;\\n}\\n\\n/**\\n * 1200px or greater\\n */\\n\\n/* @media only screen and (min-width: 1200px) {\\n  .hall-horizontal {\\n    margin-right: -41px;\\n  }\\n}\\n\\n@media only screen and (max-width: 1200px) {\\n  .hall-horizontal {\\n    margin-right: 0;\\n  }\\n}\\n\\n@media only screen and (min-width: 1200px) {\\n  .room {\\n    height: 150px;\\n  }\\n} */\\n\\n.notes {\\n  background: lightsalmon;\\n  display: block;\\n  position: relative;\\n  padding: 15px 5px 20px 35px;\\n  cursor: pointer;\\n  font-size: 17px;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n}\\n\\n.notes-header {\\n  font-size: 20px;\\n}\\n\\n.notes-section-header {\\n  /* text-align: center; */\\n  font-style: italic;\\n  text-decoration: underline;\\n  padding: 3px;\\n  font-size: 19px;\\n}\\n\\n.notes-section-content {\\n  /* margin: auto;\\n  width: 600px; */\\n}\\n\\n.checkbox-inline {\\n  padding-left: 13px;\\n}\"","module.exports = \"<div class=\\\"row game-status-row\\\">\\n  <p id=\\\"current-game-status\\\">{{ currentStatus }}</p>\\n</div>\\n\\n<div id=\\\"gameboard-container\\\">\\n  <!-- Game board -->\\n\\n  <table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" class=\\\"gameboard\\\">\\n    <tbody>\\n      <tr>\\n        <td id=\\\"study\\\" #study (click)=\\\"boardClicked(study)\\\" class=\\\"room\\\">Study</td>\\n        <td>\\n          <div id=\\\"hall-3\\\" #hall3 (click)=\\\"boardClicked(hall3)\\\" class=\\\"hall-horizontal\\\"></div>\\n        </td>\\n        <td id=\\\"hall\\\" #hall (click)=\\\"boardClicked(hall)\\\" class=\\\"room\\\">Hall</td>\\n        <td>\\n          <div id=\\\"hall-8\\\" #hall8 (click)=\\\"boardClicked(hall8)\\\" class=\\\"hall-horizontal\\\"></div>\\n        </td>\\n        <td id=\\\"lounge\\\" #lounge (click)=\\\"boardClicked(lounge)\\\" class=\\\"room\\\">Lounge</td>\\n      </tr>\\n      <tr>\\n        <td class=\\\"hall\\\">\\n          <div id=\\\"hall-1\\\" #hall1 (click)=\\\"boardClicked(hall1)\\\" class=\\\"hall-vertical\\\"></div>\\n        </td>\\n        <td></td>\\n        <td class=\\\"hall\\\">\\n          <div id=\\\"hall-6\\\" #hall6 (click)=\\\"boardClicked(hall6)\\\" class=\\\"hall-vertical\\\"></div>\\n        </td>\\n        <td></td>\\n        <td class=\\\"hall\\\">\\n          <div id=\\\"hall-11\\\" #hall11 (click)=\\\"boardClicked(hall11)\\\" class=\\\"hall-vertical\\\"></div>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td id=\\\"library\\\" #library (click)=\\\"boardClicked(library)\\\" class=\\\"room\\\">Library</td>\\n        <td>\\n          <div id=\\\"hall-4\\\" #hall4 (click)=\\\"boardClicked(hall4)\\\" class=\\\"hall-horizontal\\\"></div>\\n        </td>\\n        <td id=\\\"billiard-room\\\" #billiardRoom (click)=\\\"boardClicked(billiardRoom)\\\" class=\\\"room\\\">Billiard Room</td>\\n        <td>\\n          <div id=\\\"hall-9\\\" #hall9 (click)=\\\"boardClicked(hall9)\\\" class=\\\"hall-horizontal\\\"></div>\\n        </td>\\n        <td id=\\\"dining-room\\\" #diningRoom (click)=\\\"boardClicked(diningRoom)\\\" class=\\\"room\\\">Dining Room</td>\\n      </tr>\\n      <tr>\\n        <td class=\\\"hall\\\">\\n          <div id=\\\"hall-2\\\" #hall2 (click)=\\\"boardClicked(hall2)\\\" class=\\\"hall-vertical\\\"></div>\\n        </td>\\n        <td></td>\\n        <td class=\\\"hall\\\">\\n          <div id=\\\"hall-7\\\" #hall7 (click)=\\\"boardClicked(hall7)\\\" class=\\\"hall-vertical\\\"></div>\\n        </td>\\n        <td></td>\\n        <td class=\\\"hall\\\">\\n          <div id=\\\"hall-12\\\" #hall12 (click)=\\\"boardClicked(hall12)\\\" class=\\\"hall-vertical\\\"></div>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td id=\\\"conservatory\\\" #conservatory (click)=\\\"boardClicked(conservatory)\\\" class=\\\"room\\\">Conservatory</td>\\n        <td>\\n          <div id=\\\"hall-5\\\" #hall5 (click)=\\\"boardClicked(hall5)\\\" class=\\\"hall-horizontal\\\"></div>\\n        </td>\\n        <td id=\\\"ballroom\\\" #ballroom (click)=\\\"boardClicked(ballroom)\\\" class=\\\"room\\\">Ballroom</td>\\n        <td>\\n          <div id=\\\"hall-10\\\" #hall10 (click)=\\\"boardClicked(hall10)\\\" class=\\\"hall-horizontal\\\"></div>\\n        </td>\\n        <td id=\\\"kitchen\\\" #kitchen (click)=\\\"boardClicked(kitchen)\\\" class=\\\"room\\\">Kitchen</td>\\n      </tr>\\n    </tbody>\\n  </table>\\n\\n</div>\\n<!-- Button row -->\\n<div class=\\\"row button-bottom-row\\\">\\n  <button id=\\\"accusation-btn\\\" [disabled]=\\\"!isMyTurn || hasMadeAccusation\\\" class=\\\"btn btn-primary\\\"\\n    (click)=\\\"openModalAccusation(accusationModal)\\\">\\n    Accuse!\\n  </button>\\n  &nbsp;&nbsp;\\n  <button id=\\\"suggestion-btn\\\" [disabled]=\\\"disableSuggestionButton()\\\" class=\\\"btn btn-primary\\\"\\n    (click)=\\\"openModalSuggestion(suggestionModal)\\\">\\n    Suggest!\\n  </button>\\n  &nbsp;&nbsp;\\n  <button id=\\\"my-cards-btn\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"openMyCardsModal(myCardsModal)\\\">\\n    My Cards\\n  </button>\\n  &nbsp;&nbsp;\\n  <button id=\\\"end-turn-btn\\\" [disabled]=\\\"!isMyTurn\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"endTurn()\\\">\\n    End turn\\n  </button>\\n</div>\\n<!-- End Button row -->\\n<!-- Accusation modal -->\\n<ng-template #accusationModal let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Make an accusation</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-4\\\">\\n        <form>\\n          <label>Player:</label>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"modalColonelMustard\\\" name=\\\"character\\\" value=\\\"Colonel Mustard\\\">\\n                Colonel Mustard\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"modalMissScarlet\\\" name=\\\"character\\\" value=\\\"Miss Scarlet\\\">\\n                Miss Scarlet\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"modalMrGreen\\\" name=\\\"character\\\" value=\\\"Mr. Green\\\">\\n                Mr. Green\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"modalMrsPeacock\\\" name=\\\"character\\\" value=\\\"Mrs. Peacock\\\">\\n                Mrs. Peacock\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"modalMrWhite\\\" name=\\\"character\\\" value=\\\"Mr. White\\\">\\n                Mr. White\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"modalProfessorPlum\\\" name=\\\"character\\\" value=\\\"Professor Plum\\\">\\n                Professor Plum\\n              </label>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"col-4\\\">\\n        <form>\\n          <label>Weapon:</label>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"candlestick\\\" name=\\\"weapon\\\" value=\\\"Candlestick\\\">\\n                Candlestick\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"revolver\\\" name=\\\"weapon\\\" value=\\\"Revolver\\\">\\n                Revolver\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"knife\\\" name=\\\"weapon\\\" value=\\\"Knife\\\">\\n                Knife\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"leadPipe\\\" name=\\\"weapon\\\" value=\\\"Lead Pipe\\\">\\n                Lead Pipe\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"rope\\\" name=\\\"weapon\\\" value=\\\"Rope\\\">\\n                Rope\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"wrench\\\" name=\\\"weapon\\\" value=\\\"Wrench\\\">\\n                Wrench\\n              </label>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"col-4\\\">\\n        <form>\\n          <label>Room:</label>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"suggest-study\\\" name=\\\"room\\\" value=\\\"Study\\\">\\n                Study\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"suggest-hall\\\" name=\\\"room\\\" value=\\\"Hall\\\">\\n                Hall\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"suggest-lounge\\\" name=\\\"room\\\" value=\\\"Lounge\\\">\\n                Lounge\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"suggest-library\\\" name=\\\"room\\\" value=\\\"Library\\\">\\n                Library\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"suggest-billiardRoom\\\" name=\\\"room\\\" value=\\\"Billiard Room\\\">\\n                Billiard Room\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"suggest-diningRoom\\\" name=\\\"room\\\" value=\\\"Dining Room\\\">\\n                Dining Room\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"suggest-conservatory\\\" name=\\\"room\\\" value=\\\"Conservatory\\\">\\n                Conservatory\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"suggest-ballroom\\\" name=\\\"room\\\" value=\\\"Ballroom\\\">\\n                Ballroom\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"suggest-kitchen\\\" name=\\\"room\\\" value=\\\"Kitchen\\\">\\n                Kitchen\\n              </label>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"handleAccusation()\\\">Accuse!</button>\\n  </div>\\n</ng-template>\\n<!-- End Accusation modal -->\\n\\n<!-- Suggestion modal -->\\n<ng-template #suggestionModal let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Make a suggestion</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-6\\\">\\n        <form>\\n          <label>Player:</label>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"modalColonelMustard\\\" name=\\\"character\\\" value=\\\"Colonel Mustard\\\">\\n                Colonel Mustard\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"modalMissScarlet\\\" name=\\\"character\\\" value=\\\"Miss Scarlet\\\">\\n                Miss Scarlet\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"modalMrGreen\\\" name=\\\"character\\\" value=\\\"Mr. Green\\\">\\n                Mr. Green\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"modalMrsPeacock\\\" name=\\\"character\\\" value=\\\"Mrs. Peacock\\\">\\n                Mrs. Peacock\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"modalMrWhite\\\" name=\\\"character\\\" value=\\\"Mr. White\\\">\\n                Mr. White\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"modalProfessorPlum\\\" name=\\\"character\\\" value=\\\"Professor Plum\\\">\\n                Professor Plum\\n              </label>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"col-6\\\">\\n        <form>\\n          <label>Weapon:</label>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"candlestick\\\" name=\\\"weapon\\\" value=\\\"Candlestick\\\">\\n                Candlestick\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"revolver\\\" name=\\\"weapon\\\" value=\\\"Revolver\\\">\\n                Revolver\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"knife\\\" name=\\\"weapon\\\" value=\\\"Knife\\\">\\n                Knife\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"leadPipe\\\" name=\\\"weapon\\\" value=\\\"Lead Pipe\\\">\\n                Lead Pipe\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"rope\\\" name=\\\"weapon\\\" value=\\\"Rope\\\">\\n                Rope\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"wrench\\\" name=\\\"weapon\\\" value=\\\"Wrench\\\">\\n                Wrench\\n              </label>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <!-- <div class=\\\"col-4\\\">\\n        <form>\\n          <label>Room:</label>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"suggest-study\\\" name=\\\"room\\\" value=\\\"Study\\\">\\n                Study\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"suggest-hall\\\" name=\\\"room\\\" value=\\\"Hall\\\">\\n                Hall\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"suggest-lounge\\\" name=\\\"room\\\" value=\\\"Lounge\\\">\\n                Lounge\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"suggest-library\\\" name=\\\"room\\\" value=\\\"Library\\\">\\n                Library\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"suggest-billiardRoom\\\" name=\\\"room\\\" value=\\\"Billiard Room\\\">\\n                Billiard Room\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"suggest-diningRoom\\\" name=\\\"room\\\" value=\\\"Dining Room\\\">\\n                Dining Room\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"suggest-conservatory\\\" name=\\\"room\\\" value=\\\"Conservatory\\\">\\n                Conservatory\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"suggest-ballroom\\\" name=\\\"room\\\" value=\\\"Ballroom\\\">\\n                Ballroom\\n              </label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>\\n                <input type=\\\"radio\\\" id=\\\"suggest-kitchen\\\" name=\\\"room\\\" value=\\\"Kitchen\\\">\\n                Kitchen\\n              </label>\\n            </div>\\n          </div>\\n        </form>\\n      </div> -->\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"handleSuggestion()\\\">Suggest!</button>\\n  </div>\\n</ng-template>\\n<!-- End Suggestion modal -->\\n\\n<!-- My Cards modal -->\\n<ng-template #myCardsModal let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">My Cards</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n      <!-- <div class=\\\"col-4\\\">\\n          <label>Character:</label>\\n          <ul>\\n            <li *ngFor=\\\"let card of myCards\\\">\\n              {{ card }}\\n            </li>\\n          </ul>\\n      </div>\\n      <div class=\\\"col-4\\\">\\n        <label>Weapon:</label>\\n        <ul>\\n\\n        </ul>\\n      </div>\\n      <div class=\\\"col-4\\\">\\n        <label>Room:</label>\\n        <ul>\\n\\n        </ul>\\n\\n      </div> -->\\n      <div class=\\\"col-12\\\">\\n        <label>Cards: </label>&nbsp;&nbsp;\\n        <ul>\\n          <li *ngFor=\\\"let card of myCards\\\">\\n            {{ card.value }}\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"handleSuggestion()\\\">Suggest!</button>\\n  </div> -->\\n</ng-template>\\n<!-- End My Cards Modal -->\\n\\n<!-- Offer Clue modal -->\\n<ng-template #offerClueModal let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Offer Clue</h4>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12\\\">\\n        <span>\\n          {{ lastSuggestion }}\\n        </span>\\n      </div>\\n    </div>\\n    <br />\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12\\\">\\n        <label>Cards:</label>&nbsp;&nbsp;\\n        <select id=\\\"offerClueSelectDropdown\\\">\\n          <option *ngFor=\\\"let card of myClueCards\\\" id=\\\"card.id\\\">\\n            {{ card.value }}\\n          </option>\\n        </select>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark offer-clue-btn\\\" (click)=\\\"handleOfferClue()\\\">Offer Clue</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark reject-offer-clue-btn\\\"\\n      (click)=\\\"handleRejectOfferClue()\\\">Reject</button>\\n  </div>\\n</ng-template>\\n<!-- End Offer Clue Modal -->\\n<button hidden style=\\\"display:none;\\\" id=\\\"offer-clue-modal-btn\\\" (click)=\\\"openOfferClueModal(offerClueModal)\\\"></button>\\n\\n<div class=\\\"notes\\\">\\n  <h4 class=\\\"notes-header\\\">Notes: </h4>\\n  <h5 class=\\\"notes-section-header\\\">Suspects Eliminated</h5>\\n  <form class=\\\"notes-section-content\\\">\\n    <label class=\\\"checkbox-inline\\\">\\n      <input type=\\\"checkbox\\\" value=\\\"\\\">&nbsp;Colonel Mustard&nbsp;&nbsp;\\n    </label>\\n    <label class=\\\"checkbox-inline\\\">\\n      <input type=\\\"checkbox\\\" value=\\\"\\\">&nbsp;Miss Scarlet&nbsp;&nbsp;\\n    </label>\\n    <label class=\\\"checkbox-inline\\\">\\n      <input type=\\\"checkbox\\\" value=\\\"\\\">&nbsp;Mrs. Peacock&nbsp;&nbsp;\\n    </label>\\n    <label class=\\\"checkbox-inline\\\">\\n      <input type=\\\"checkbox\\\" value=\\\"\\\">&nbsp;Mr. Green&nbsp;&nbsp;\\n    </label>\\n    <label class=\\\"checkbox-inline\\\">\\n      <input type=\\\"checkbox\\\" value=\\\"\\\">&nbsp;Mr. White&nbsp;&nbsp;\\n    </label>    \\n    <label class=\\\"checkbox-inline\\\">\\n      <input type=\\\"checkbox\\\" value=\\\"\\\">&nbsp;Professor Plum&nbsp;&nbsp;\\n    </label>    \\n  </form>\\n  <h5 class=\\\"notes-section-header\\\">Weapons Eliminated</h5>\\n  <form class=\\\"notes-section-content\\\">\\n    <label class=\\\"checkbox-inline\\\">\\n      <input type=\\\"checkbox\\\" value=\\\"\\\">&nbsp;Candle Stick&nbsp;&nbsp;\\n    </label>\\n    <label class=\\\"checkbox-inline\\\">\\n      <input type=\\\"checkbox\\\" value=\\\"\\\">&nbsp;Knife&nbsp;&nbsp;\\n    </label>\\n    <label class=\\\"checkbox-inline\\\">\\n      <input type=\\\"checkbox\\\" value=\\\"\\\">&nbsp;Lead Pipe&nbsp;&nbsp;\\n    </label>\\n    <label class=\\\"checkbox-inline\\\">\\n      <input type=\\\"checkbox\\\" value=\\\"\\\">&nbsp;Revolver&nbsp;&nbsp;\\n    </label>\\n    <label class=\\\"checkbox-inline\\\">\\n      <input type=\\\"checkbox\\\" value=\\\"\\\">&nbsp;Rope&nbsp;&nbsp;\\n    </label>    \\n    <label class=\\\"checkbox-inline\\\">\\n      <input type=\\\"checkbox\\\" value=\\\"\\\">&nbsp;Wrench&nbsp;&nbsp;\\n    </label>    \\n  </form>\\n  <h5 class=\\\"notes-section-header\\\">Rooms Eliminated</h5>\\n  <form class=\\\"notes-section-content\\\">\\n    <label class=\\\"checkbox-inline\\\">\\n      <input type=\\\"checkbox\\\" value=\\\"\\\">&nbsp;Study&nbsp;&nbsp;\\n    </label>\\n    <label class=\\\"checkbox-inline\\\">\\n      <input type=\\\"checkbox\\\" value=\\\"\\\">&nbsp;Hall&nbsp;&nbsp;\\n    </label>\\n    <label class=\\\"checkbox-inline\\\">\\n      <input type=\\\"checkbox\\\" value=\\\"\\\">&nbsp;Lounge&nbsp;&nbsp;\\n    </label>\\n    <label class=\\\"checkbox-inline\\\">\\n      <input type=\\\"checkbox\\\" value=\\\"\\\">&nbsp;Library&nbsp;&nbsp;\\n    </label>\\n    <label class=\\\"checkbox-inline\\\">\\n      <input type=\\\"checkbox\\\" value=\\\"\\\">&nbsp;Billiard Room&nbsp;&nbsp;\\n    </label>    \\n    <label class=\\\"checkbox-inline\\\">\\n      <input type=\\\"checkbox\\\" value=\\\"\\\">&nbsp;Dining Room&nbsp;&nbsp;\\n    </label>    \\n    <label class=\\\"checkbox-inline\\\">\\n      <input type=\\\"checkbox\\\" value=\\\"\\\">&nbsp;Conservatory&nbsp;&nbsp;\\n    </label>  \\n    <label class=\\\"checkbox-inline\\\">\\n      <input type=\\\"checkbox\\\" value=\\\"\\\">&nbsp;Ballroom&nbsp;&nbsp;\\n    </label>  \\n    <label class=\\\"checkbox-inline\\\">\\n      <input type=\\\"checkbox\\\" value=\\\"\\\">&nbsp;Kitchen&nbsp;&nbsp;\\n    </label>  \\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { SocketService } from '../socket.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Player } from 'src/models/Player';\nimport { CardHelper } from 'src/models/CardHelper';\nimport { InactivePieces } from 'src/models/InactivePieces';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit {\n  private static DEBUG: boolean = true;\n\n  private static boardLocationIds: string[] = [ 'study', 'hall-1', 'library', 'hall-2','conservatory', 'hall-3','hall-4',\n                                         'hall-5','hall','hall-6','billiard-room','hall-7','ballroom','hall-8',\n                                         'hall-9','hall-10','lounge','hall-11','dining-room','hall-12','kitchen']\n  \n  \n  private static suggestionPlayerIds: string[] = ['modalColonelMustard', 'modalMissScarlet', 'modalMrGreen', 'modalMrsPeacock','modalMrWhite','modalProfessorPlum'];\n  private static suggestionWeaponIds: string[] = ['candlestick', 'revolver', 'knife', 'leadPipe','rope','wrench'];\n  private static suggestionRoomIds: string[] = ['suggest-study', 'suggest-hall', 'suggest-lounge', 'suggest-library','suggest-billiardRoom','suggest-diningRoom', 'suggest-conservatory', 'suggest-ballroom', 'suggest-kitchen'];\n  \n  private accusationBtn: string = \"accusation-btn\";\n  private suggestionBtn: string = \"suggestion-btn\";\n  private endBtn: string = \"end-turn-btn\";\n\n  public static PLAYER_NAME: string;\n  \n  // Pieces each first letter inn piece are uppercase, i.e. Colonel Mustard, Mr. White\n  private playersByPiece: {} = {};\n\n  private opponents: Player[] = [];\n  private opponentsIndex = 0;\n \n  private myPlayerPiece: string;\n  private roomId: string;\n  private currentStatus: string = 'Awaiting players...';\n\n  private isMyPlayer: boolean = true;\n  \n  private isMyTurn: boolean = false;\n\n  private hasMoved: boolean = false;\n  private hasMadeSuggestion: boolean = false;\n  private hasMadeAccusation: boolean = false;\n\n  // last suggestion made\n  private lastSuggestedPlayer: string;\n  private lastSuggestedRoom: string;\n  private lastSuggestedWeapon: string;\n\n  private myCards: any[] = [];\n  private myClueCards: any[] = [];\n\n  private legalMoves: string[] = [];\n\n  private requestingPlayerSocketId: string;\n\n  private lastSuggestion: string;\n\n  private currentLocation: string = '';\n\n  private wasMovedBySuggestion: boolean = false;\n\n  // Dependency injection syntax\n  constructor(private modalService: NgbModal,\n              private socketService: SocketService,\n              private toastr: ToastrService) {\n\n  }\n\n  ngOnInit() {\n\n    /**\n     * Player selected event from server\n     */\n    this.socketService.onPlayerSelected().subscribe((msg) => {\n      console.log('onPlayerSelected received from game component.');\n      this.roomId = msg.roomId;\n      const newPlayer = msg.newPlayer;\n      \n      const socketId = newPlayer.socketId;\n      const name = newPlayer.name\n      const piece = newPlayer.piece;\n\n      if(GameComponent.DEBUG) {\n        console.log(`socketId: ${socketId}`);\n        console.log(`name: ${name}`);\n        console.log(`piece: ${piece}`);\n      }\n\n      this.toastr.success(`${name} is playing as ${piece}`, 'Player Joined');\n      // the first message received will be my player\n      if(GameComponent.PLAYER_NAME === name) {\n        this.myPlayerPiece = piece;\n        console.log(`myPlayerPiece = ${this.myPlayerPiece}`);\n      }\n    })\n\n    /**\n     * Start game event from server\n     */\n    this.socketService.onStartGame().subscribe((msg) => {\n      console.log('onStartGame received from game component.');\n        const players = msg.players;\n        for(let p of players) {\n          const playerPiece = p.piece;\n          const cards = p.cards;\n          const mappedPlayer = new Player(p.socketId, p.name, playerPiece, p.currentLocation, cards);\n          console.log(mappedPlayer);\n          this.playersByPiece[playerPiece] = mappedPlayer;\n          if(playerPiece != this.myPlayerPiece) {\n            this.opponents.push(mappedPlayer);\n          } else {\n\n            for(let i = 0; i < cards.length; i++) {\n              const card = cards[i];\n              const id = CardHelper.getCardHtmlId(card);\n              this.myCards[i] = {id: id, value: card}\n            }\n\n            // console.log(this.myCards);\n          }\n        }\n        const inactivePlayersPieces = msg.inactivePlayersPieces;\n        console.log(inactivePlayersPieces);\n        InactivePieces.assignLocations(inactivePlayersPieces);\n        console.log('can we get here 3'); \n        const firstPiece = msg.firstPiece;\n        this.startGame(firstPiece);\n    });\n\n\n    /**\n     * Get legal moves event from server. This is for the current myPlayer only.\n     */\n    this.socketService.onGetLegalMovesResponse().subscribe((msg) => {\n      const moves = msg.legalMoves;\n      this.isMyTurn = true;\n      \n      this.legalMoves = [];\n      for(let i = 0; i < moves.length; i++) {\n        const move = moves[i];\n        this.legalMoves.push(move);\n      }\n      if(this.legalMoves.length == 0) { // no legal moves are available\n        alert('You have no legal moves avaialble. Either make an accusation or end your turn.');\n        // lose turn or make an accusation\n        document.getElementById(this.suggestionBtn).setAttribute('diabled', 'true');\n        document.getElementById(this.accusationBtn).click();\n\n        this.currentStatus = 'You have no legal moves available. Either make an accusation or end your turn.';\n\n      } else {\n        this.currentStatus = `It is your turn ${this.myPlayerPiece}! Select a room.`;\n        for(let i = 0; i < GameComponent.boardLocationIds.length; i++) {\n          const location = GameComponent.boardLocationIds[i];\n          const node: HTMLElement = document.getElementById(location);\n          if(this.legalMoves.indexOf(location) != -1) {\n              node.classList.add('selectable-room');\n          } else {\n              node.classList.remove('selectable-room');\n          }\n        }\n      }\n\n    })\n\n    /**\n     * Player moved returned from server.\n     */\n    this.socketService.onPlayerMoved().subscribe((msg) => {\n      const piece = msg.piece;\n      const location = msg.location;\n      if(piece == this.myPlayerPiece) {\n        this.currentLocation = location;\n      }\n      this.movePieceOnGameboard(piece, location);\n    })\n\n    /**\n     * Suggestion made\n     */\n    this.socketService.onSuggestionMade().subscribe((msg) => {\n      const piece = msg.piece; // Colonel Mustard ... etc\n      const suggestedPlayer = msg.suggestedPlayer;\n      const weapon = msg.weapon;\n      const room = msg.room;\n      let formattedRoom;\n      if(room === 'dining-room') {\n        formattedRoom = 'Dining Room'\n      } else if(room === 'billiard-room') {\n        formattedRoom = 'Billiard Room'\n      } else {\n        formattedRoom = room.charAt(0).toUpperCase() + room.slice(1);\n      }\n      this.lastSuggestedPlayer = suggestedPlayer;\n      this.lastSuggestedRoom = formattedRoom;\n      this.lastSuggestedWeapon = weapon;\n\n      this.lastSuggestion = `${piece} suggested '${suggestedPlayer}' in '${formattedRoom}' with '${weapon}'`\n      if(piece != this.myPlayerPiece) {\n        this.currentStatus = this.lastSuggestion;\n      } else {\n        this.currentStatus = `You suggested '${suggestedPlayer}' in '${formattedRoom}' with '${weapon}'`;\n        this.getCluesFromOtherPlayer();\n      }\n\n      if(suggestedPlayer === this.myPlayerPiece) {\n        this.wasMovedBySuggestion = true;\n      }\n\n      this.toastr.info(this.currentStatus, 'Suggestion Made', {\n        disableTimeOut:  false\n      });\n      this.movePieceOnGameboard(suggestedPlayer, room);\n    })\n\n    /**\n     * Next player up\n     */\n    this.socketService.onNextPlayerUp().subscribe((msg) => {\n      const piece = msg.piece;\n      this.handleNextPlayerUp(piece);\n    })\n\n\n    /**\n     * Accusation made\n     */\n    this.socketService.onAccusationMade().subscribe((msg) => {\n      const piece = msg.piece; // Colonel Mustard ... etc\n      const accusedPlayer = msg.accusedPlayer;\n      const weapon = msg.weapon;\n      const room = msg.room;\n\n      const didWin = msg.didWin;\n\n      this.toastr.info(`${piece} accused ${accusedPlayer} in ${room} with ${weapon}`, 'Accusation Made', {\n        disableTimeOut:  true\n      });\n      \n      if(didWin) {\n        if(piece === this.myPlayerPiece) {\n          alert('Game Over. You win the game!!!');\n        } else {\n          alert(`Game Over. ${piece} won the game :(`);\n        }\n        setTimeout(location.reload, 3000);\n      } else {\n        if(piece === this.myPlayerPiece) {\n          this.currentStatus = 'You\\'re accusation was wrong you may only watch now.';\n        } \n        this.toastr.error(`${piece}'s accusation was wrong`, 'Accusation incorrect');\n        console.log('Reaching to a point before deleting the player on board');\n        // Jerry: we will keep the player's piece on board\n        // this.removePlayerFromBoard(piece);\n        this.movePieceOnGameboard(piece, 'billiard-room');\n        this.resetBoardColors();\n      }\n    })\n\n\n    /**\n     * Offer clue\n     */\n     this.socketService.onRequestOfferClue().subscribe((msg) => {\n       console.log('You must offer a clue or reject the offer');\n\n       this.requestingPlayerSocketId = msg.requestingPlayerSocketId;\n       document.getElementById('offer-clue-modal-btn').click();\n     })\n\n     /**\n      * \n      */\n     this.socketService.onClueOfferRejected().subscribe((msg) => {\n        \n        this.getCluesFromOtherPlayer();\n     })\n\n     this.socketService.onClueOffered().subscribe((msg) => {\n      const requestedPlayerSocketId = msg.requestedPlayerSocketId;\n      const clue = msg.card;\n\n      const opponent = this.getOpponentBySocketId(requestedPlayerSocketId);\n      this.toastr.success(`${opponent.piece} offered ${clue}`, 'Clue Offered');\n     })\n    \n  }\n  \n    /**\n   * Start of the game\n   * @param inactivePlayersPieces \n   */\n  //private placeInactivePieces(inactivePlayersPieces: string[]) {\n  //  console.log('place all inactive pieces in middle of the board (Billiard Room)');\n  //  new InactivePieces()\n  //}\n\n\n  /**\n   * Start of the game\n   * @param firstPiece \n   */\n  private startGame(firstPiece: string) {\n    console.log('starting the game');\n    \n    // iterate over the keys of the object and put the players on the board\n    for(let piece in this.playersByPiece) {\n      const player: Player = this.playersByPiece[piece];\n      \n      const node: HTMLElement = player.node;\n      const location = player.currentLocation;\n      let elm = document.getElementById(player.currentLocation);\n      elm.appendChild(node);\n    }\n    \n    console.log('myPlayerPiece: ' + this.myPlayerPiece);\n    if(this.myPlayerPiece != firstPiece) {\n      this.isMyTurn = false;\n      this.currentStatus = `${firstPiece} is making a move...`\n      this.toastr.success(`${firstPiece} is first. Please wait for your turn`, 'Game Started');\n    } else {\n      this.toastr.success(`${firstPiece} take your turn!`, 'Game Started');\n      this.resetStateForMyTurn();\n      const myPlayer = this.getMyPlayer();\n      this.currentLocation = myPlayer.currentLocation;\n      this.socketService.getLegalMoves(this.roomId, this.currentLocation);\n    }\n  }\n\n  /**\n   * Handle next player up.\n   * @param piece \n   */\n  private handleNextPlayerUp(piece: string) {\n\n    let toastrMessage;\n    if(this.myPlayerPiece === piece) {\n     this.resetStateForMyTurn();\n      const myPlayer = this.getMyPlayer();\n      const location = myPlayer.currentLocation;\n      toastrMessage = `Its your turn`\n      this.socketService.getLegalMoves(this.roomId, location);\n    } else {\n      toastrMessage = `${piece}'s turn`;\n      this.isMyTurn = false;\n      this.currentStatus = `${piece} is making a move...`\n    }\n    this.toastr.success(toastrMessage, 'Next player up');\n\n  }\n\n  private resetStateForMyTurn() {\n    this.isMyTurn = true;\n    this.hasMoved = false;\n    this.hasMadeSuggestion = false;\n    this.hasMadeAccusation = false;\n    this.opponentsIndex = 0;\n  }\n\n  boardClicked(elmRef: HTMLElement) {\n    // console.log(this.hasMoved)\n    if(!this.isMyTurn || this.hasMoved) {\n      return;\n    }\n    const location = elmRef.id;\n    if(this.legalMoves.indexOf(location) != -1) {\n      const formattedId = location.replace('-', ' ').toLowerCase();\n      console.log(formattedId);\n      this.currentStatus = `You selected the ${location}`;\n      this.hasMoved = true;\n      this.currentLocation = location;\n      this.socketService.movePlayer(this.roomId, this.myPlayerPiece, location);\n      this.resetBoardColors();\n    }\n\n  }\n\n  /**\n   * A method to handle suggestions from the suggestion modal\n   */\n  handleSuggestion() {\n    let suggestedPlayer;\n    for(let suggestionPlayerId of GameComponent.suggestionPlayerIds) {\n      let player: any = document.getElementById(suggestionPlayerId);\n      if(player == undefined) continue;\n\n      if(player.checked) {\n        suggestedPlayer = player.value;\n      }\n    }\n    console.log(suggestedPlayer);\n    if(suggestedPlayer === undefined) {\n      return;\n    }\n\n    let suggestedWeapon;\n    for(let suggestionWeaponId of GameComponent.suggestionWeaponIds) {\n      let weapon: any = document.getElementById(suggestionWeaponId);\n      if(weapon.checked) {\n        suggestedWeapon = weapon.value;\n      }\n    }\n    console.log(suggestedWeapon);\n    if(suggestedWeapon === undefined) {\n      return;\n    }\n\n    let suggestedRoom = this.getMyPlayer().currentLocation;\n\n    console.log(this.playersByPiece)\n    this.socketService.makeSuggestion(this.roomId, this.myPlayerPiece, suggestedPlayer, suggestedWeapon, suggestedRoom);\n    this.modalService.dismissAll();\n    this.hasMadeSuggestion = true;\n  }\n\n  /**\n   * A method to handle suggestions from the suggestion modal\n   */\n  handleAccusation() {\n    let accusedPlayer;\n    for(let suggestionPlayerId of GameComponent.suggestionPlayerIds) {\n      let player: any = document.getElementById(suggestionPlayerId);\n      if(player == undefined) continue;\n\n      if(player.checked) {\n        accusedPlayer = player.value;\n      }\n    }\n    console.log(accusedPlayer);\n    if(accusedPlayer === undefined) {\n      return;\n    }\n\n    let accusedWeapon;\n    for(let suggestionWeaponId of GameComponent.suggestionWeaponIds) {\n      let weapon: any = document.getElementById(suggestionWeaponId);\n      if(weapon.checked) {\n        accusedWeapon = weapon.value;\n      }\n    }\n    console.log(accusedWeapon);\n    if(accusedWeapon === undefined) {\n      return;\n    }\n\n    let accusedRoom;\n    for(let suggestionRoom of GameComponent.suggestionRoomIds) {\n      let room: any = document.getElementById(suggestionRoom);\n      if(room.checked) {\n        accusedRoom = room.value;\n      }\n    }\n    console.log(accusedRoom);\n    if(accusedRoom === undefined) {\n      return;\n    }\n\n    this.currentStatus = `You accused ${accusedPlayer} in ${accusedRoom} with ${accusedWeapon}`;\n    this.socketService.makeAccusation(this.roomId, this.myPlayerPiece, accusedPlayer, accusedWeapon, accusedRoom);\n    this.modalService.dismissAll();\n    this.hasMadeAccusation = true;\n  }\n\n  endTurn() {\n    this.socketService.endTurn(this.roomId, this.myPlayerPiece);\n    this.wasMovedBySuggestion = false;\n    this.resetBoardColors();\n  }\n\n  resetBoardColors(): void {\n    for(let i = 0; i < GameComponent.boardLocationIds.length; i++) {\n      const location = GameComponent.boardLocationIds[i];\n      const node: HTMLElement = document.getElementById(location);\n      if(node.classList.contains('selectable-room')) {\n          node.classList.remove('selectable-room');\n      }\n    }\n  }\n\n  private movePieceOnGameboard(piece: string, location: string): void {\n    const player = this.playersByPiece[piece];\n    console.log(\"player : \" + player)\n    console.log(\"location : \" + location);\n    if(player === undefined) {\n      let elmToRemove = document.getElementById(InactivePieces.lookUpPieceId(piece));\n      elmToRemove.remove();\n      const node: HTMLElement = document.createElement('IMG');\n      node.setAttribute('id', InactivePieces.lookUpPieceId(piece));\n      node.setAttribute('src', InactivePieces.lookUpImageUrl(piece));\n      node.setAttribute('width', '50px');\n      let newElm = document.getElementById(location);\n      newElm.appendChild(node);   \n      return;\n    }\n    // The player image\n    const node = player.node;\n\n    // remove from old locationn\n    const currentLocation = player.currentLocation;\n    const currElm = document.getElementById(currentLocation);\n    currElm.removeChild(node);\n\n    // move to new location\n    player.currentLocation = location;\n    const newElm = document.getElementById(location);\n    newElm.appendChild(node);\n  }\n\n  /**\n   * Get clues from other player.\n   */\n  private getCluesFromOtherPlayer(): void {\n    if(this.opponentsIndex >= this.opponents.length) {\n      alert('All players could not offer a clue');\n      return;\n    }\n    const opponent = this.opponents[this.opponentsIndex];\n    const socketId = opponent.socketId;\n    const myPlayerSocketId = this.getMyPlayer().socketId;\n    this.socketService.getClueFromPlayer(this.roomId, myPlayerSocketId, socketId);\n    this.opponentsIndex++;\n  }\n\n  /**\n   * Get my player.\n   */\n  private getMyPlayer(): Player {\n    return this.playersByPiece[this.myPlayerPiece];\n  }\n  \n  /**\n   * Open Suggestion modal\n   * @param content \n   */\n  openModalSuggestion(content) {\n    this.modalService.open(content, {\n      size: 'lg',\n    });\n\n    // const player: Player = this.getMyPlayer();\n    // const playerId = player.playerId;\n    // console.log(playerId);\n\n    // const elm: HTMLElement = document.getElementById(playerId);\n    // elm.parentElement.parentElement.remove();\n  }\n\n  /**\n   * Open Accusation modal\n   * @param content \n   */\n  openModalAccusation(content) {\n    this.modalService.open(content, {\n      size: 'lg',\n    });\n\n    // const player: Player = this.getMyPlayer();\n    // const playerId = player.playerId;\n    // console.log(playerId)\n    // const elm: HTMLElement = document.getElementById(playerId);\n    // elm.parentElement.parentElement.remove();\n  }\n\n  /**\n   * Open My cards modal\n   * @param content \n   */\n  openMyCardsModal(content) {\n    this.modalService.open(content, {\n      size: 'lg',\n    });\n  }\n\n  /**\n   * Open Offer clue\n   * @param content \n   */\n  openOfferClueModal(content) {\n    // filter clue cards\n    this.myClueCards = [];\n    for(let i = 0; i < this.myCards.length; i++) {\n      let card = this.myCards[i];\n      let id = card.id;\n      let value = card.value;\n      console.log(`openOfferClueModal card=[${value}]`);\n      if(value === this.lastSuggestedPlayer || value === this.lastSuggestedRoom || value === this.lastSuggestedWeapon) {\n        this.myClueCards.push(card);\n      }\n    }\n\n\n    this.modalService.open(content, {\n      size: 'lg',\n      backdrop: 'static',\n      keyboard: false\n    });\n  }\n\n  handleOfferClue() {\n  \n    const elm: any = document.getElementById('offerClueSelectDropdown');\n    let card = elm.value;\n    console.log(\"card offered: \" + card);\n    this.socketService.offerClue(this.requestingPlayerSocketId, this.getMySocketId(), card);\n    this.modalService.dismissAll();\n  }\n\n  handleRejectOfferClue() {\n    this.socketService.rejectOfferClue(this.requestingPlayerSocketId, this.getMySocketId());\n    this.modalService.dismissAll();\n  }\n\n  private getMySocketId() {\n    return this.getMyPlayer().socketId;\n  }\n\n  private getOpponentBySocketId(socketId: string): Player {\n    for(let opp of this.opponents) {\n      if(opp.socketId === socketId) {\n        return opp;\n      }\n    }\n  }\n\n  disableSuggestionButton() {\n    if(!this.isMyTurn) {\n      return true;\n    } else if(this.currentLocation.includes('hall-')) {\n      return true;\n    } else if (!(this.hasMoved || this.wasMovedBySuggestion)) {\n      return true;\n    } else if(this.hasMadeSuggestion) {\n      return true;\n    }\n    \n    return false;\n  }\n\n  private removePlayerFromBoard(piece: string) {\n    const removedPlayer: Player = this.playersByPiece[piece];\n    const removedPlayerId = removedPlayer.playerId;\n\n    console.log(\"removedPlayerId: \" + removedPlayerId);\n\n    let elm: HTMLElement = document.getElementById(removedPlayerId);\n    elm.parentElement.removeChild(elm);\n  }\n}\n","module.exports = \".header-menu {\\n  width: 60%;\\n  margin: 27px auto;\\n}\\n\\n.error {\\n  color: red;\\n}\\n\\n.form-title {\\n  text-align: center;\\n}\\n\\n.how-to-play-header {\\n  text-align: center;\\n}\\n\\nselect:required:invalid {\\n  color: gray;\\n}\\n\\noption[value=\\\"\\\"][disabled] {\\n  display: none;\\n}\\n\\noption {\\n  color: black;\\n}\\n\\np {\\n  margin-bottom: 8px;\\n}\\n\\n.join-row {\\n   margin-bottom: 50px;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"menu\\\">\\n    <div class=\\\"header-menu\\\">\\n      <h3 class=\\\"how-to-play-header\\\">How To Play</h3>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col col-sm-6 col-lg-6 offset-3\\\">\\n        <h4 class=\\\"form-title\\\">Create a new game</h4>\\n        <div>\\n          <p>1. Enter a username and select the number of players</p>\\n          <p>2. Click on new game.</p>\\n        </div>\\n        <form>\\n          <div class=\\\"form-group row\\\">\\n            <input [(ngModel)]=\\\"creatorPlayerName\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"name\\\" placeholder=\\\"Enter your name\\\"\\n              required>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n              <select [(ngModel)]=\\\"numberOfPlayers\\\" name=\\\"numberOfPlayers\\\" class=\\\"form-control\\\">\\n                  <option disabled selected>Select the number of players</option>\\n                  <!-- start test values -->\\n                  <!-- <option value=\\\"1\\\">1</option> -->\\n                  <option value=\\\"2\\\">2</option>\\n                  <!-- end test values -->\\n                  <option value=\\\"3\\\">3</option>\\n                  <option value=\\\"4\\\">4</option>\\n                  <option value=\\\"5\\\">5</option>\\n                  <option value=\\\"6\\\">6</option>\\n              </select>\\n\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"createGame()\\\">New Game</button>\\n          </div>\\n        </form>\\n        <div class=\\\"row error\\\" *ngIf=\\\"createGameError\\\">\\n          <p>{{ createGameErrorMessage }}</p>\\n        </div>\\n      </div>\\n    </div>\\n    <br />\\n    <div class=\\\"row join-row\\\">\\n      <div class=\\\"col col-sm-6 col-lg-6 offset-3\\\">\\n        <h4 class=\\\"form-title\\\">Join an existing game</h4>\\n        <div>\\n          <p>1. Enter a username and the room id.</p>\\n          <p>2. Click on join game.</p>\\n        </div>\\n        <form>\\n          <div class=\\\"form-group row\\\">\\n            <input [(ngModel)]=\\\"joiningPlayerName\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"name\\\" id=\\\"nameJoin\\\"\\n              placeholder=\\\"Enter your name\\\" required>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <input [(ngModel)]=\\\"roomId\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"room\\\" id=\\\"room\\\" placeholder=\\\"Enter Game ID\\\"\\n              required>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <button id=\\\"join\\\" class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"joinGame()\\\">Join Game</button>\\n          </div>\\n        </form>\\n        <div class=\\\"row error\\\" *ngIf=\\\"joinGameError\\\">\\n          <p>{{ joinGameErrorMessage }}</p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { SocketService } from './../socket.service';\nimport { GameComponent } from '../game/game.component';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css']\n})\nexport class LandingPageComponent implements OnInit {\n\n  // @Output() landingPageStatusChange = new EventEmitter();\n\n  private creatorPlayerName: string = '';\n  private numberOfPlayers: number;\n  private createGameError: boolean = false;\n  private createGameErrorMessage: string = '';\n\n  private joiningPlayerName: string = '';\n  private roomId: string = '';\n  private joinGameError: boolean = false;\n  private joinGameErrorMessage: string = '';\n\n  // Dependency injection syntax\n  constructor(private socketService: SocketService) {   \n  }\n\n  ngOnInit() {\n  }\n\n  createGame(): void {\n    if(this.creatorPlayerName === '') {\n      this.createGameErrorMessage = 'Please enter your name.';\n      this.createGameError = true;\n      return;\n    }\n\n    if(this.numberOfPlayers === undefined) {\n      this.createGameErrorMessage ='Please enter the number of players.';\n      this.createGameError = true;\n      return;\n    }\n\n    this.createGameError = false;\n    GameComponent.PLAYER_NAME = this.creatorPlayerName;\n    this.socketService.createGame(this.creatorPlayerName, this.numberOfPlayers);\n  }\n\n  joinGame(): void {\n    if(this.joiningPlayerName === '') {\n      this.joinGameErrorMessage = 'Please enter your name.';\n      this.joinGameError = true;\n      return;\n    }\n\n    if(this.roomId === '') {\n      this.joinGameErrorMessage = 'Please enter the room id.';\n      this.joinGameError = true;\n      return;\n    }\n\n    this.joinGameError = false;\n\n    GameComponent.PLAYER_NAME = this.joiningPlayerName;\n    this.socketService.joinGame(this.joiningPlayerName, this.roomId);\n\n    // const event = new JoinGame(this.joiningPlayerName, this.roomId);\n    // this.landingPageStatusChange.emit(event);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport { Observable } from 'rxjs';\nimport { removeDebugNodeFromIndex } from '@angular/core/src/debug/debug_node';\n\n/**\n * Singleton service\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SocketService {\n  private socket: SocketIOClient.Socket;\n\n  constructor() {\n    this.socket = io.connect();\n    this.init();\n  }\n\n  /**\n   * Socket events to client.\n   */\n  private init() {\n    console.log('initializing sockets');\n    this.socket.on('connect', (msg: any) => {\n      console.log('socket connected to server');\n    })\n  }\n\n  onNewGameCreated() {\n    return new Observable<any>(observer => {\n      this.socket.on('new-game-created', (msg: any) => {\n        // console.log('new game created...');\n        observer.next(msg);\n      })\n    })\n  }\n\n  onGameJoined() {\n    return new Observable<any>(observer => {\n      this.socket.on('player-joined-game', (msg: any) => {\n        // console.log('new game created...');\n        observer.next(msg);\n      })\n    })\n  }\n\n  onPlayerSelected() {\n    return new Observable<any>(observer => {\n      this.socket.on('player-selected', (msg: any) => {\n        // console.log('player selected...');\n        observer.next(msg);\n      })\n    })\n  }\n\n  onStartGame() {\n    return new Observable<any>(observer => {\n      this.socket.on('start-game', (msg: any) => {\n        // console.log('player selected...');\n        observer.next(msg);\n      })\n    })\n  }\n\n  onGetLegalMovesResponse() {\n    return new Observable<any>(observer => {\n      this.socket.on('get-legal-moves-response', (msg: any) => {\n        observer.next(msg);\n      })\n    })\n  }\n\n  onPlayerMoved() {\n    return new Observable<any>(observer => {\n      this.socket.on('player-moved', (msg: any) => {\n        observer.next(msg);\n      })\n    })\n  }\n\n  onSuggestionMade() {\n    return new Observable<any>(observer => {\n      this.socket.on('suggestion-made', (msg: any) => {\n        observer.next(msg);\n      })\n    })\n  }\n\n  onNextPlayerUp() {\n    return new Observable<any>(observer => {\n      this.socket.on('next-player-up', (msg: any) => {\n        observer.next(msg);\n      })\n    })\n  }\n\n  onAccusationMade() {\n    return new Observable<any>(observer => {\n      this.socket.on('accusation-made', (msg: any) => {\n        observer.next(msg);\n      })\n    })\n  }\n\n  onRequestOfferClue() {\n    return new Observable<any>(observer => {\n      this.socket.on('request-offer-clue', (msg: any) => {\n        observer.next(msg);\n      })\n    })\n  }\n\n  onClueOffered() {\n    return new Observable<any>(observer => {\n      this.socket.on('clue-offered', (msg: any) => {\n        observer.next(msg);\n      })\n    })\n  }\n\n  onClueOfferRejected() {\n    return new Observable<any>(observer => {\n      this.socket.on('clue-offer-rejected', (msg: any) => {\n        observer.next(msg);\n      })\n    })\n  }\n\n\n  /**\n   * Socket events to server.\n   */\n  \n  choosePlayer(roomId: string, name: string, player: string) {\n    const message = {\n      roomId: roomId,\n      name: name,\n      piece: player\n    }\n    this.socket.emit('select-player', message);\n  }\n\n  createGame(name: string, numPlayers: number) {\n    const message = {\n      name: name,\n      numPlayers: numPlayers\n    }\n\n    this.socket.emit('create-game', message);\n  }\n\n  joinGame(name: string, roomId: string) {\n    const message = {\n      roomId: roomId,\n      name: name\n    }\n\n    this.socket.emit('player-join-game', message);\n  }\n\n  getLegalMoves(roomId: string, location: string) {\n    const message = {\n      roomId: roomId,\n      location: location\n    }\n\n    this.socket.emit('get-legal-moves', message);\n  }\n\n  movePlayer(roomId: string, piece: string, location: string) {\n    const message = {\n      roomId: roomId,\n      piece: piece,\n      location: location\n    }\n\n    this.socket.emit('move-player', message);\n  }\n\n  makeSuggestion(roomId: string, piece: string, player: string, weapon: string, room: string) {\n    const message = {\n      roomId: roomId,\n      piece: piece,\n      player: player,\n      weapon: weapon,\n      room: room\n    }\n\n    this.socket.emit('make-suggestion', message);\n  }\n\n  makeAccusation(roomId: string, piece: string, player: string, weapon: string, room: string) {\n    const message = {\n      roomId: roomId,\n      piece: piece,\n      player: player,\n      weapon: weapon,\n      room: room\n    }\n\n    this.socket.emit('make-accusation', message);\n  }\n\n  endTurn(roomId: string, piece: string) {\n    const message = {\n      roomId: roomId,\n      piece: piece\n    }\n\n    this.socket.emit('end-turn', message);\n  }\n\n  getClueFromPlayer(roomId: string, requestingPlayerSocketId: string, requestedPlayerSocketId: string) {\n    const message = {\n      roomId: roomId,\n      requestingPlayerSocketId: requestingPlayerSocketId,\n      requestedPlayerSocketId: requestedPlayerSocketId\n    }\n\n    this.socket.emit('get-clue-from-player', message);\n  }\n\n  offerClue(requestingPlayerSocketId: string, requestedPlayerSocketId: string, card: string) {\n    const message = {\n      requestingPlayerSocketId: requestingPlayerSocketId,\n      requestedPlayerSocketId: requestedPlayerSocketId,\n      card: card\n    }\n\n    this.socket.emit('offer-clue', message);\n  }\n\n  rejectOfferClue(requestingPlayerSocketId: string, requestedPlayerSocketId: string) {\n    const message = {\n      requestingPlayerSocketId: requestingPlayerSocketId,\n      requestedPlayerSocketId: requestedPlayerSocketId\n    }\n\n    this.socket.emit('reject-offer-clue', message);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","export class CardHelper {\n\n    private static CARD_NAME_TO_ID_MAP:{} = {\n        'Colonel Mustard': 'colonelMustard',\n        'Miss Scarlet': 'missScarlet',\n        'Mr. Green': 'mrGreen',\n        'Mrs. Peacock': 'mrsPeacock',\n        'Mr. White': 'mrWhite',\n        'Professor Plum': 'professorPlum',\n        'Candle Stick': 'candleStick',\n        'Knife': 'knife',\n        'Lead Pipe':'leadPipe',\n        'Revolver':'revolver',\n        'Rope': 'rope',\n        'Wrench':'wrench',\n        'Study':'study',\n        'Library':'library',\n        'Conservatory':'conservatory',\n        'Hall':'hall',\n        'Billiard Room':'billiardRoom',\n        'Ballroom':'ballroom',\n        'Lounge':'lounge',\n        'Dining Room':'diningRoom',\n        'Kitchen':'kitchen'\n    }\n\n    static getCardHtmlId(cardName: string) {\n        return CardHelper.CARD_NAME_TO_ID_MAP[cardName];\n    }\n\n    static getCardServerName(htmlId: string) {\n        return Object.keys(CardHelper.CARD_NAME_TO_ID_MAP).find(key => CardHelper.CARD_NAME_TO_ID_MAP[key] === htmlId);\n    }\n}","export class InactivePieces {\n\n    private static pieceToImageMap: {} = {\n      'Colonel Mustard': '../../assets/colonelMustard.png',\n      'Miss Scarlet': '../../assets/missScarlet.png',\n      'Mr. Green': '../../assets/mrGreen.png',\n      'Mrs. Peacock': '../../assets/mrsPeacock.png',\n      'Mr. White': '../../assets/mrWhite.png',\n      'Professor Plum': '../../assets/professorPlum.png'\n    }\n  \n    private static pieceToIdMap: {} = {\n      'Colonel Mustard': 'colonelMustard',\n      'Miss Scarlet': 'missScarlet',\n      'Mr. Green': 'mrGreen',\n      'Mrs. Peacock': 'mrsPeacock',\n      'Mr. White': 'mrWhite',\n      'Professor Plum': 'professorPlum'\n    }\n  \n    static assignLocations(inactivePieces: string[]): void {\n      for(let piece of inactivePieces) {\n        console.log('now in the assignLocations loop');\n        let imageUrl = this.pieceToImageMap[piece];\n        console.log(imageUrl);\n        let playerId = this.pieceToIdMap[piece];\n        const node: HTMLElement = document.createElement('IMG');\n        node.setAttribute('id', playerId);\n        node.setAttribute('src', imageUrl);\n        node.setAttribute('width', '50px');\n        console.log('we are here now');\n        let elm = document.getElementById('billiard-room');\n        console.log('can we get here 1');\n        elm.appendChild(node);   \n        console.log('can we get here 2'); \n      }  \n    }\n\n    static lookUpPieceId(piece: string): string {\n      let pieceId = this.pieceToIdMap[piece];\n      return pieceId;\n    }\n\n    static lookUpImageUrl(piece: string): string {\n      let imageUrl = this.pieceToImageMap[piece];\n      return imageUrl;\n    }    \n\n  }","export class Player {\n  private _socketId: string;\n  private _name: string;\n  private _piece: string;\n  private _currentLocation: string;\n  private _imageUrl: string;\n  private _playerId: string;\n  private _cards: string[];\n  private _node: HTMLElement;\n\n  private pieceToImageMap: {} = {\n    'Colonel Mustard': '../../assets/colonelMustard.png',\n    'Miss Scarlet': '../../assets/missScarlet.png',\n    'Mr. Green': '../../assets/mrGreen.png',\n    'Mrs. Peacock': '../../assets/mrsPeacock.png',\n    'Mr. White': '../../assets/mrWhite.png',\n    'Professor Plum': '../../assets/professorPlum.png'\n  }\n\n  private pieceToIdMap: {} = {\n    'Colonel Mustard': 'colonelMustard',\n    'Miss Scarlet': 'missScarlet',\n    'Mr. Green': 'mrGreen',\n    'Mrs. Peacock': 'mrsPeacock',\n    'Mr. White': 'mrWhite',\n    'Professor Plum': 'professorPlum'\n  }\n\n  constructor(socketId: string, name: string, piece: string, currentLocation: string, cards: string[]) {\n    this._socketId = socketId;\n    this._name = name;\n    this._piece = piece;\n    this._currentLocation = currentLocation;\n    this._cards = cards;\n    this._imageUrl = this.pieceToImageMap[piece];\n    this._playerId = this.pieceToIdMap[piece];\n    this._node = document.createElement('IMG');\n    this._node.setAttribute('id', this._playerId);\n    this._node.setAttribute('src', this._imageUrl);\n    this._node.setAttribute('width', '50px');\n  }\n\n  get playerId(): string {\n    return this._playerId;\n  }\n\n  get node(): HTMLElement {\n    return this._node;\n  }\n\n  get imageUrl(): string {\n    return this._imageUrl;\n  }\n\n  set currentLocation(currentLocation: string) {\n    this._currentLocation = currentLocation;\n  }\n  \n  get currentLocation(): string {\n    return this._currentLocation;\n  }\n\n  get cards(): string[] {\n    return this._cards;\n  }\n\n  get socketId(): string {\n    return this._socketId;\n  }\n\n  get piece(): string {\n    return this._piece;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  public toString() {\n    return `{ name=${this._name}, piece=${this._piece}, currentLocation=${this._currentLocation}, imgUrl=${this._imageUrl} }`;\n  }\n}\n","/* (ignored) */"],"sourceRoot":""}